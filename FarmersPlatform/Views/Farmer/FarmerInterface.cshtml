@model FarmersPlatform.Models.Farmer

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>
        Farmer | @Model.FirstName @Model.LastName
        
        </title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
    <style>
        .add-product-form {
            margin-top: 70px;
            position: fixed;
            left: -100%; /* Initially hidden off-screen */
            top: 0;
            width: 50%; /* Limit expansion to 50% of the screen */
            height: 100vh;
            background: linear-gradient(to right, orange, white);
            z-index: 100;
            transition: left 0.4s ease-in; /* Animation transition */
            color:white ;
        }

        .add-product-form.show {
                left: 0; /* Slide in from the left to the middle of the screen */
        }

        #cancelProductButton {
            background-color: indianred; /* Set the background color to light red */
            border: none;
            float: right; /* Position the button on the right side */
            transition: background-color 0.6s; /* Add transition effect */
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        }

            #cancelProductButton:hover {
                background: linear-gradient(to right, orange, indianred);
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.8);
            }

        .formsubmit {
            transition: background-color 0.6s; /* Add transition effect */
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        }

        .formsubmit :hover {
                box-shadow: 0 10px 10px white);
        }

        .modal {
            display: none; /* Hide the modal by default */
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.5);
        }

        /* Style the modal content */
        .modal-content {
            position: relative;
            margin: 15% auto;
            padding: 20px;
            width: 300px;
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
            text-align: center;
        }

        /* Style the modal buttons */
        .modal-buttons {
            margin-top: 20px;
        }

            .modal-buttons a {
                margin: 0 10px;
            }


        .myProductsHeader {
            text-align: center;
            margin-top: 40px;
            margin-bottom: 50px;
        }


        .appbar {
            position: sticky;
            top: 0;
            background-color: #006800;
            display: flex;
            align-items: center;
            justify-content: flex-start; /* Update to flex-start */
            z-index: 999;
        }

            .appbar .farmer-dropdown {
                margin-right: 20px;
                color: #fff;
            }

            .appbar .btn-primary {
                background-color: #006800;
                color: #fff;
                margin-right: 10px;
                border: none;
                font-size: 20px;
            }

                .appbar .btn-primary:hover {
                    background-color: white;
                    color: #006800;
                    transition: background-color 0.5s, color 0.5s; /* Add transition effect */
                }





        .farmer-dropdown {
            margin-left: auto; /* Move the dropdown button to the right */
        }

        .dropdown .btn-secondary {
            background-color: #000;
            color: #fff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
            border: none;
            transition: background-color 0.5s, color 0.5s;
            margin-left: auto; /* Update to margin-left: auto */
            font-size: 18px;
            margin-right: 50px;
        }

            .dropdown .btn-secondary:hover {
                background-color: #fff;
                color: #000;
                transition: background-color 0.5s, color 0.5s;
            }

            .dropdown .btn-secondary:focus {
                background-color: #fff;
                color: #000;
            }

        .dropdown-menu {
            color: #fff;
            border: none;
            transition: background-color 0.5s, color 0.5s;
        }

            .dropdown-menu .dropdown-item {
                background-color: #fff;
                color: #000;
                transition: background-color 0.5s, color 0.5s;
            }

                .dropdown-menu .dropdown-item:hover {
                    background-color: #000;
                    color: #fff;
                    transition: background-color 0.5s, color 0.5s;
                }

        .card-container {
            display: flex;
            flex-wrap: wrap; /* Allow cards to wrap to the next line */
            justify-content: center; /* Center cards horizontally */

            
        }

        .card-footer .btn-success {
            background-color: #28a745; /* Green background */
            color: #fff; /* White text */
            margin-right: 10px; /* Add right margin for spacing */
            transition: background-color 0.5s; /* Add transition effect */
            margin-left: 15px;
            width: 70px;
        }

            .card-footer .btn-success:hover {
                background-color: #1e7e34; /* Dark green background */
            }


        .card-footer .btn-danger {
            background-color: #dc3545; /* Red background */
            color: #fff; /* White text */
            transition: background-color 0.5s; /* Add transition effect */
            margin-right: 15px;
        }

            /* Change the background color of the delete button on hover */
            .card-footer .btn-danger:hover {
                background-color: #c82333; /* Dark orange background */
            }


        .card-footer {
            background-color: #fff; /* White background */
            border: none; /* Remove the border */
            text-align: center; /* Center the buttons */
            padding: 20px; /* Add padding to the top and bottom */
        }

        .card {
            display: inline-block; /* Display the card as inline-block */
            width: auto; /* Adjust width to fit content (image width) */
            border: none; /* Remove the border */
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.5); /* Add shadow effect */
        }

            .card img {
                width: 400px; /* Set a fixed width for all images */
                height: auto; /* Maintain aspect ratio */
            }
        .row {
            margin-left: 50px;
            margin-right: 50px;
        }

        .logo {
            display: flex;
            align-items: center;
        }

        .company-logo {
            width: 120px; /* Adjust the width value as needed */
            height: 100%;
            object-fit: contain;
            margin-right: 20px; /* Adjust the margin-right value as needed */
        }
    
    </style>
</head>
<body>

    <div class="appbar">

        <div class="logo">
            <a href="#top">
                <img src="@Url.Content("~/Images/FreshfulLogo.png")" alt="Company Logo" class="company-logo" />
            </a>
        </div>

        <div>
            @if (Model != null)
            {
                <button class="btn btn-primary" id="addProductButton">Add Product</button>
                <a href="@Url.Action("FarmerOrders", "Farmer", new { farmerId = Model.FarmerId })" class="btn btn-primary">Orders</a>
                <a href="@Url.Action("FarmerDashboard", "Farmer", new { farmerId = Model.FarmerId })" class="btn btn-primary">Dashboard</a>
            }
        </div>
 
        <div class="farmer-dropdown">
            @if (Model != null)
            {
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        @Model.FirstName
                    </button>
                    <div class="dropdown-menu" aria-labelledby="dropdownMenu2">
                        <a href="@Url.Action("PersonalDetails", "Farmer", new { farmerId = Model.FarmerId })" class="dropdown-item">Personal Details</a>
                        <a href="@Url.Action("Logout", "Farmer", new { farmerId = Model.FarmerId })" class="dropdown-item">Logout</a>
                    </div>
                </div>
            }
        </div>
    </div>
   

    @if (!string.IsNullOrEmpty(TempData["AddProductSuccess"] as string))
    {
        <div id="successAlert" class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["AddProductSuccess"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (!string.IsNullOrEmpty(TempData["EditProductSuccess"] as string))
    {
        <div id="successAlert" class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["EditProductSuccess"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (!string.IsNullOrEmpty(TempData["ErrorMessage"] as string))
    {
        <div id="errorAlert" class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <h2 class="myProductsHeader">My Products</h2>


    <div class="card-container">
        <div class="row">
            @foreach (var product in ViewBag.Products)
            {
                <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text">Price: @product.Price$</p>
                            <p class="card-text">Category: @product.Category</p>
                            <img src="@Url.Content("~/Images/" + @product.Image)" alt="Product Image" style="max-width: 100%; height: 200px;" />
                            <div class="card-footer">
                                <a href="#" class="btn btn-danger" onclick="showConfirmationPopup('@Url.Action("DeleteProduct", "Farmer", new { farmerId = Model.FarmerId, productId = product.ProductId })', '@product.Name')">Delete</a>
                                <a href="#" class="btn btn-success" onclick="showEditProductPopup('@Url.Action("EditProduct", "Farmer", new { farmerId = Model.FarmerId, productId = product.ProductId })', '@product.Name', @product.Price, '@product.Category', @product.ProductId)">Edit</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>


    <!-- Add Product Form -->
    <div class="add-product-form">
        <div class="container mt-4">
            <h3 style="margin-top: 60px;"> New Product</h3>
            <form method="post" action="/Farmer/AddProduct?farmerId=@Model.FarmerId" enctype="multipart/form-data">
                <div class="mb-3">
                    <label for="productName" class="form-label">Product Name:</label>
                    <input type="text" class="form-control" id="productName" name="Name" required>
                </div>
                <div class="mb-3">
                    <label for="productPrice" class="form-label">Product Price (For 1 KG):</label>
                    <input type="number" class="form-control" id="productPrice" name="Price" step="0.01" required>
                </div>
                <div class="mb-3">
                    <label for="productCategory" class="form-label">Product Category:</label>
                    <select class="form-control" id="productCategory" name="Category" required>
                        <option value="Fruit">Fruit</option>
                        <option value="Vegetable">Vegetable</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="productImage" class="form-label">Product Image:</label>
                    <input type="file" class="form-control" id="productImage" name="Image" accept="image/*" required>
                </div>

                <button type="submit" class="btn btn-success formsubmit">Submit</button>
                <button type="button" class="btn btn-secondary" id="cancelProductButton">Cancel</button>
            </form>
        </div>
    </div>



    <!-- Add a modal container for the DELETE confirmation popup -->
    <div id="deleteConfirmationModal" class="modal">
        <div class="modal-content">
            <h3>Confirmation</h3>
            <p id="deleteConfirmationMessage"></p>
            <div class="modal-buttons">
                <a href="#" class="btn btn-secondary" id="cancelDeleteButton">Cancel</a>
                <a href="#" class="btn btn-danger" id="confirmDeleteButton">Delete</a>
            </div>
        </div>
    </div>

    <!-- Add a modal container for the edit product popup -->
    <div id="editProductModal" class="modal">
        <div class="modal-content">
            <h3>Edit Product</h3>
            <form id="editProductForm" method="post" action="@Url.Action("EditProduct", "Farmer", new { farmerId = Model.FarmerId})" enctype="multipart/form-data">

                <div class="mb-3">
                    <label for="editProductName" class="form-label">Product Name:</label>
                    <input type="text" class="form-control" id="editProductName" name="updatedProduct.Name" required>
                </div>
                <div class="mb-3">
                    <label for="editProductPrice" class="form-label">Product Price (For 1 KG):</label>
                    <input type="number" class="form-control" id="editProductPrice" name="updatedProduct.Price" step="0.01" required>
                </div>
                <div class="mb-3">
                    <label for="editProductCategory" class="form-label">Product Category:</label>
                    <select class="form-control" id="editProductCategory" name="updatedProduct.Category" required>
                        <option value="Fruit">Fruit</option>
                        <option value="Vegetable">Vegetable</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="editProductImage" class="form-label">Product Image:</label>
                    <input type="file" class="form-control" id="editProductImage" name="image" accept="image/*" required>
                </div>

                <input type="hidden" name="farmerId" value="@Model.FarmerId">

                <div class="modal-buttons">
                    <a href="#" class="btn btn-secondary" id="cancelEditButton" onclick="hideEditProductPopup()">Cancel</a>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>



    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>

    <script>
        $(document).ready(function () {
        // Show Add Product Form
        $("#addProductButton").click(function () {
        $(".add-product-form").addClass("show");
        });

        // Hide Add Product Form
        $("#cancelProductButton").click(function () {
        $(".add-product-form").removeClass("show");
        });
        });
    </script>

    <script>
        function showConfirmationPopup(deleteUrl, productName) {
            // Show the modal popup
            var modal = document.getElementById("deleteConfirmationModal");
            modal.style.display = "block";

            // Set the confirmation message with the product name
            var confirmationMessage = document.getElementById("deleteConfirmationMessage");
            confirmationMessage.textContent = "Are you sure you want to delete " + productName + "?";

            // Handle the cancel button click event
            var cancelButton = document.getElementById("cancelDeleteButton");
            cancelButton.onclick = function () {
                modal.style.display = "none";
            };

            // Handle the delete button click event
            var confirmDeleteButton = document.getElementById("confirmDeleteButton");
            confirmDeleteButton.onclick = function () {
                window.location.href = deleteUrl;
            };
        }
    </script>


    <script>
        function showEditProductPopup(editUrl, productName, productPrice, productCategory, productId) {
            // Show the modal popup
            var modal = document.getElementById("editProductModal");
            modal.style.display = "block";

            // Populate the form fields with the current product details
            var editProductForm = document.getElementById("editProductForm");
            editProductForm.action = editUrl;

            var productIdField = document.getElementById("editProductId");
            var productNameField = document.getElementById("editProductName");
            var productPriceField = document.getElementById("editProductPrice");
            var productCategoryField = document.getElementById("editProductCategory");

            productNameField.value = productName;
            productPriceField.value = productPrice;
            productCategoryField.value = productCategory;

            

            // Handle the form submission event

            var saveEditButton = document.getElementById("saveEditButton");
            saveEditButton.onclick = function () {
                // Perform any necessary validation before submitting the form
                editProductForm.submit();
            };
        }


        // Handle the cancel button click event
        function hideEditProductPopup() {
            var modal = document.getElementById("editProductModal");
            modal.style.display = "none";
        }
    </script>

</body>
</html>